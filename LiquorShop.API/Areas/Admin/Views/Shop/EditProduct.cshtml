@model LiquorShop.API.Areas.Admin.Models.ViewModel.ProductVM

@{
    ViewBag.Title = "Edit Product";
}

<h2>Edit Product</h2>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<style>
    input#ImageName {
        display: none;
    }
</style>
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}
@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatFKId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CatFKId, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CatFKId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="~/Images/@Model.ProductName/@Model.ImageName" />
                <br><br />
                <img id="imgpreview" src="#" />
                <br><br />
                <input type="file" name="file" id="ProImage" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<hr />
@if (!Model.Images.Any())
{
    <h3>There are no images !!</h3>
}

<form enctype="multipart/form-data" class="dropzone" id="dropHere">
    <div class="fallback">
        <input type="file" name="files" multiple />
        <input type="submit" value="Upload">
    </div>
</form>

<br />

@foreach (var img in Model.Images)
{
    <div style="display:inline-block">
        <img src="~/Images/@Model.ProductName/@img" />
        @Html.ActionLink("Delete", "DeleteImage", "Shop", new { @class = "deleteimage", data_name = img })
    </div>
}

   
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
@section Scripts{

    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <script>
        $(function () {

            function loadImage(imgs) {
                if (imgs.files && imgs.files[0]) {
                    var read = new FileReader();

                    read.onload = function (ev) {
                        $("img#imgpreview").attr("src", ev.target.result).width(150).height(150);
                    }

                    read.readAsDataURL(imgs.files[0]);
                }
            }

            $("#ProImage").change(function () {
                loadImage(this);
            })

           //Dropzone Gallery Images
            $("form#dropHere").dropzone({
                url: '@Url.Action("SaveGalleryImages", "Shop")',
                acceptedFiles: "image/*",
                init: function () {
                    this.on("complete", function (files) {
                        if (this.getUploadingFiles().length == 0 && this.getQueuedFiles().length == 0)
                            location.reload();
                    });

                    this.on("sending", function (files, xhr, formData) {
                        formData.append("proName", '@Model.ProductName')
                    })
                }
            })


            //Delete Gallery Images
            $("a.deleteimage").click(function (e) {
                e.preventDefault();
                //debugger;
                if (!confirm("Confirm Deletion"))
                    return false;

                var $this = $(this);
                var url = '@Url.Action("DeleteImage", "Shop")';
                var imageName = $this.data("name");

                $.post(url, { proName: '@Model.ProductName', imageName: imageName }, function (data) {
                    var response = data.trim();
                    if (response == "success") {
                        location.reload();
                    }
                });

                @*$.ajax({
                    type: "DELETE",
                    url: '@Url.Action("DeleteCategory", "Shop")',
                    data: { id: catID },
                    success: function (data) {
                        var response = data.trim();
                        if (response == "success") {
                            location.reload();
                        }
                    },

                })*@
            });
        });

        
          
           
        
    </script>
}